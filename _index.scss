@use './src/mixins/getters.scss';
@use './src/mixins/util.scss';
@use './src/motion-tokens.scss';
@use './src/keys.scss';

@forward './src/base-motion-tokens.scss';
@forward './src/keys.scss';

$motion-tokens: motion-tokens.$list;

@mixin motion($token: motion-tokens.$default, $triggers: 'hover') {
  @include getters.get-transition-duration(map-get($token, 'duration'));

  @include getters.get-transition-function(map-get($token, 'function'));

  @include util.multiple-selectors('&:%sel%', $triggers) {
    @include getters.get-transition-type(map-get($token, 'type'));
  }
}

@mixin dinamic-motion {
  @each $duration in keys.$durations {
    [motion*='#{$duration}'] {
      @include getters.get-transition-duration($duration);
    }
  }

  @each $function in keys.$functions {
    [motion*='#{$function}'] {
      @include getters.get-transition-function($function);
    }
  }

  @include util.multiple-selectors("[motion*='%sel%']:%sel%", keys.$triggers) {
    @each $type in keys.$types {
      &[motion*='#{$type}'] {
        @include getters.get-transition-type($type);
      }
    }
  }
}

@mixin static-motion($token-name, $triggers: 'hover') {
  $token: map-get(motion-tokens.$list, $token-name);

  @if $token {
    @include motion($token, $triggers);
  } @else {
    @error '#{$token-name} was not found';
  }
}
